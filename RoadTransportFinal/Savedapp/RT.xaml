<Page
    x:Class="RoadTransportFinal.Savedapp.RT"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RoadTransportFinal.Savedapp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <RelativePanel RequestedTheme="Dark">
        <RelativePanel.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="#FF015C70" Offset="1"/>
            </LinearGradientBrush>
        </RelativePanel.Background>

        <Button Name="SplitViewButton" Background="Transparent" Padding="0,-6" Margin="12" Click="SplitViewButton_Click">
            <FontIcon FontFamily="{ThemeResource ContentControlThemeFontFamily}" Glyph="&#x2261;" FontSize="32" Margin="0,-8,0,0" Foreground="White"/>
        </Button>
        <TextBlock Style="{ThemeResource SubheaderTextBlockStyle}" Text="Slots" 
                   RelativePanel.RightOf="SplitViewButton" Foreground="White" />
        <SplitView x:Name="MySplitView"  OpenPaneLength="200" PaneBackground="#FF015C70"
                   RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="SplitViewButton">

            <SplitView.Pane>
                <RelativePanel>
                    <RelativePanel.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF015C70" Offset="1.57"/>
                        </LinearGradientBrush>
                    </RelativePanel.Background>
                    <!-- Static Relativepanel, substitutes nested stackpanel or grid with rows/columns for this simple scenario -->
                    <AppBarButton x:Name="HomeButton" Icon="Home" 
                                   IsCompact="True" Click="Home_Click" Foreground="White"/>
                    <TextBlock Text="Home"  Tapped="TextBlock_Tapped_1"
                               RelativePanel.RightOf="HomeButton" RelativePanel.Below="BackgroundButton"  RelativePanel.AlignVerticalCenterWith="HomeButton" Foreground="White"/>
                    <AppBarButton x:Name="SettingsButton" Icon="Setting" 
                                  RelativePanel.Below="HomeButton" IsCompact="True" Click="Settings_Click" Foreground="White"/>
                    <TextBlock Text="Settings"  Tapped="TextBlock_Tapped_2"
                               RelativePanel.RightOf="SettingsButton" RelativePanel.Below="HomeButton" RelativePanel.AlignVerticalCenterWith="SettingsButton" Foreground="White"/>
                    <AppBarButton x:Name="ContactButton" Icon="Phone" 
                                  RelativePanel.Below="SettingsButton" IsCompact="True" Click="Contact_Click" Foreground="White"/>
                    <TextBlock Text="Contact"  Tapped="TextBlock_Tapped_3"
                               RelativePanel.RightOf="ContactButton" RelativePanel.Below="SettingsButton" RelativePanel.AlignVerticalCenterWith="ContactButton"  Foreground="White"/>
                    <AppBarButton x:Name="BackgroundButton" RelativePanel.Below="ContactButton" Icon="Contact" IsCompact="True" Click="Details_Click" Foreground="White"/>
                    <TextBlock Tapped="TextBlock_Tapped" 
                    	RelativePanel.RightOf="BackgroundButton" RelativePanel.AlignVerticalCenterWith="BackgroundButton" Foreground="White" Text="My Details" Height="20" VerticalAlignment="Top" />
                    <AppBarButton x:Name="LogoutBUtton" Icon="SetLockScreen" 
                                  RelativePanel.Below="BackgroundButton" IsCompact="True" Click="Logout_Click" Foreground="White">
                        <AppBarButton Icon="Back" x:Name="Back" Label="Back" Click="AppBarButton_Click" Height="48"/>
                    </AppBarButton>
                    <TextBlock Text="Logout"  Tapped="TextBlock_Tapped_4"
                               RelativePanel.RightOf="LogoutBUtton" RelativePanel.Below="ContactButton" RelativePanel.AlignVerticalCenterWith="LogoutBUtton"  Foreground="White"/>
                </RelativePanel>
            </SplitView.Pane>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled">
                <RelativePanel>
                    <Grid x:Name="LayoutRoot1" RelativePanel.AlignHorizontalCenterWithPanel="True" BorderBrush="Black" BorderThickness="3" Background="DarkSlateGray"
                  Margin="10,178,10,474" Width="340" Height="150">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="40">
                            </RowDefinition>
                            <RowDefinition Height="*">
                            </RowDefinition>

                        </Grid.RowDefinitions>



                        <TextBlock x:Name="Header" Text="ROAD TAX"  Foreground="#FF71CFC2" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        <Grid x:Name="LayoutRoot" BorderThickness="1" BorderBrush="Black" Background="DarkSlateGray" Margin="-2,2,2,-1" Width="340"  Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition>
                                </ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="SELECT" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <TextBlock Grid.Column="1" Text="APL No." FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"></TextBlock>
                            <TextBlock Grid.Column="2" Text="VHCL NO" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <TextBlock Grid.Column="3" Text="PAY STATUS" FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                            <RadioButton Grid.Column="0" Grid.Row="1" Margin="33,13.333,0,7" Height="30" Width="32"/>
                            <Border Grid.Column="0" Grid.Row="0" BorderBrush="Black" BorderThickness="1"></Border>
                            <Border Grid.Column="1" Grid.Row="0" BorderBrush="Black" BorderThickness="1"></Border>
                            <Border Grid.Column="2" Grid.Row="0" BorderBrush="Black" BorderThickness="1"></Border>
                            <Border Grid.Column="3" Grid.Row="0" BorderBrush="Black" BorderThickness="1"></Border>
                            <Border Grid.Column="0" Grid.Row="1" BorderBrush="Black" BorderThickness="1"></Border>
                            <Border Grid.Column="1" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                                <TextBlock x:Name="appno" Text="" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Margin="-1,4,-0.667,4.333" Height="40" Width="84"/>
                            </Border>
                            <Border Grid.Column="2" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                                <TextBlock x:Name="appname" Text="" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Margin="-1,-1,-1.333,-0.667" Height="50" Width="85"/>
                            </Border>
                            <Border Grid.Column="3" Grid.Row="1" BorderBrush="Black" BorderThickness="1">
                                <TextBlock x:Name="pay" Text="" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" Margin="-1,-1,-0.667,-0.667" Height="50" Width="84"/>
                            </Border>
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                        </Grid>
                    </Grid>
                    <Button x:Name="button1" RelativePanel.AlignHorizontalCenterWithPanel="True" HorizontalAlignment="Center" Content="Proceed to Pay" Click="button1_Click" Margin="120,461,120,309" Width="120">
                        <Button.Transitions>
                            <TransitionCollection>
                                <EdgeUIThemeTransition/>
                            </TransitionCollection>
                        </Button.Transitions>
                    </Button>
                </RelativePanel>
            </ScrollViewer>
        </SplitView>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Widest possible layout moves some elements around to optimize for more available width 
                        and keeps SplitView pane always showing inline -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />

                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For intermediate window widths as well as most phones on landscape orientation, 
                        this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                        <Setter Target="abc.Property" Value="Stretch" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="MySplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>

</Page>
