<Page
    x:Class="RoadTransportFinal.Menu.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RoadTransportFinal.Menu"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <RelativePanel RequestedTheme="Dark">
        <RelativePanel.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="Black" Offset="0"/>
                <GradientStop Color="#FF015C70" Offset="1"/>
            </LinearGradientBrush>
        </RelativePanel.Background>

        <Button Name="SplitViewButton" Background="Transparent" Padding="0,-6" Margin="12" Click="SplitViewButton_Click">
            <FontIcon FontFamily="{ThemeResource ContentControlThemeFontFamily}" Glyph="&#x2261;" FontSize="32" Margin="0,-8,0,0" Foreground="White"/>
        </Button>
        <TextBlock Style="{ThemeResource SubheaderTextBlockStyle}" Text="Settings" 
                   RelativePanel.RightOf="SplitViewButton" Foreground="White" />
        <SplitView x:Name="MySplitView"  OpenPaneLength="200" PaneBackground="#FF015C70"
                   RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.Below="SplitViewButton">

            <SplitView.Pane>
                <RelativePanel>
                    <RelativePanel.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#FF015C70" Offset="1.57"/>
                        </LinearGradientBrush>
                    </RelativePanel.Background>
                    <!-- Static Relativepanel, substitutes nested stackpanel or grid with rows/columns for this simple scenario -->
                    <AppBarButton x:Name="HomeButton" Icon="Home" 
                                   IsCompact="True" Click="Home_Click" Foreground="White"/>
                    <TextBlock Text="Home"  Tapped="TextBlock_Tapped_1"
                               RelativePanel.RightOf="HomeButton"   RelativePanel.AlignVerticalCenterWith="HomeButton" Foreground="White"/>
                    
                    
                    <AppBarButton x:Name="ContactButton" Icon="Phone" 
                                  RelativePanel.Below="HomeButton" IsCompact="True" Click="Contact_Click" Foreground="White"/>
                    <TextBlock Text="Contact"  Tapped="TextBlock_Tapped_3"
                               RelativePanel.RightOf="ContactButton"  RelativePanel.AlignVerticalCenterWith="ContactButton"  Foreground="White"/>
                    <AppBarButton x:Name="BackgroundButton" RelativePanel.Below="ContactButton" Icon="Contact" IsCompact="True" Click="Details_Click" Foreground="White"/>
                    <TextBlock Tapped="TextBlock_Tapped" 
                    	RelativePanel.RightOf="BackgroundButton" RelativePanel.AlignVerticalCenterWith="BackgroundButton" Foreground="White" Text="My Details" Height="20" VerticalAlignment="Top" />
                    <AppBarButton x:Name="LogoutBUtton" Icon="SetLockScreen" 
                                  RelativePanel.Below="BackgroundButton" IsCompact="True" Click="Logout_Click" Foreground="White">
                        <AppBarButton Icon="Back" x:Name="Back" Label="Back" Click="AppBarButton_Click" Height="48"/>
                    </AppBarButton>
                    <TextBlock Text="Logout"  Tapped="TextBlock_Tapped_4"
                               RelativePanel.RightOf="LogoutBUtton" RelativePanel.Below="ContactButton" RelativePanel.AlignVerticalCenterWith="LogoutBUtton"  Foreground="White"/>
                </RelativePanel>
            </SplitView.Pane>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" HorizontalScrollBarVisibility="Disabled" HorizontalScrollMode="Disabled">
                <RelativePanel x:Name="hh" HorizontalAlignment="Stretch">
                    <StackPanel Orientation="Vertical" x:Name="abc">
                        <RelativePanel>
                            <TextBlock Text="Updates" Foreground="White" HorizontalAlignment="Left" Style="{StaticResource TitleTextBlockStyle}" SelectionChanged="TextBlock_SelectionChanged" FontSize="26.667" FontWeight="Bold" Width="110"/>
                            
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <StackPanel Orientation="Vertical">
                            <ToggleSwitch  Header = "Install updates automatically" HorizontalAlignment="Stretch"/>
                                <ToggleSwitch  Header = "Download updates automatically" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Width="232"/>
                                
                            </StackPanel>
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <TextBlock Text="Change State" Foreground="White" Style="{StaticResource TitleTextBlockStyle}"  FontWeight="Bold"/>
                            
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <ComboBox Header="State:"  SelectedIndex="0" HorizontalAlignment="Left" Width="171" RenderTransformOrigin="0.5,0.5">
                                <ComboBoxItem Content="Select State"/>
                                <ComboBoxItem Content="Andhra Pradesh"/>
                                <ComboBoxItem Content="Arunanchal Pradesh"/>
                                <ComboBoxItem Content="Uttar Pradesh"/>
                                <ComboBoxItem Content="Bihar"/>
                                <ComboBoxItem Content="West Bengal"/>
                                <ComboBoxItem Content="Tamil Nadu"/>
                            </ComboBox>
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <TextBlock Text="Sounds and Notification" Foreground="White" Style="{StaticResource TitleTextBlockStyle}"  FontWeight="Bold"/>
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <StackPanel Orientation="Vertical">
                            <ToggleSwitch Header = "System Sounds" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Width="177"/>
                            <ToggleSwitch  Header = "Notification Sounds" HorizontalAlignment="Left" HorizontalContentAlignment="Left" Width="129"/>
                            </StackPanel>
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <TextBlock Text="Change Password" Foreground="White" Style="{StaticResource TitleTextBlockStyle}" SelectionChanged="TextBlock_SelectionChanged_2" FontWeight="Bold"/>

                            
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <StackPanel Orientation="Vertical">
                            <TextBox Header="Current Password :" HorizontalAlignment="Left" Width="132"  BorderBrush="White" />
                                <TextBox Header="New Password :" HorizontalAlignment="Left" Width="132" BorderBrush="White" />
                            </StackPanel>
                        </RelativePanel>
                        <RelativePanel>
                            <CheckBox Opacity="0"></CheckBox>
                        </RelativePanel>
                        <RelativePanel>
                            <Button RelativePanel.AlignHorizontalCenterWithPanel="True" x:Name="button1" HorizontalAlignment="Center"
                        Content="Change" BorderBrush="#FFFFFF19">
                                <Button.Transitions>
                                    <TransitionCollection>
                                        <EdgeUIThemeTransition/>
                                    </TransitionCollection>
                                </Button.Transitions>
                            </Button>
                        </RelativePanel>
                    </StackPanel>
                </RelativePanel>
            </ScrollViewer>
        </SplitView>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Widest possible layout moves some elements around to optimize for more available width 
                        and keeps SplitView pane always showing inline -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />

                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=548 and <720 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="548" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For intermediate window widths as well as most phones on landscape orientation, 
                        this state keeps primary layout narrow while showing the splitview pane to take advantage of more available width than narrow layout -->
                        <Setter Target="MySplitView.DisplayMode" Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="True" />
                        <Setter Target="abc.Property" Value="Stretch" />
                        <Setter Target="abc.Width" Value="420" />
                        <Setter Target="hh.HorizontalAlignment" Value="Center" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="MySplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen" Value="False" />
                        <Setter Target="abc.Width" Value="320" />
                        <Setter Target="hh.HorizontalAlignment" Value="Center" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </RelativePanel>
</Page>
